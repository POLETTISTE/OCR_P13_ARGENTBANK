{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    isConnected: false,\n    rememberMe: false,\n    firstName: \"\",\n    lastName: \"\",\n    lightMode: false\n  },\n  reducers: {\n    login: state => {\n      state.isConnected = true;\n    },\n    logout: state => {\n      state.isConnected = false;\n    },\n    setRememberMe: state => {\n      state.rememberMe = true;\n    },\n    clearRememberMe: state => {\n      state.rememberMe = false;\n    },\n    updateFirstName: (state, action) => {\n      state.firstName = action.payload;\n    },\n    updateLastName: (state, action) => {\n      state.lastName = action.payload;\n    },\n    setLightMode: (state, action) => {\n      state.lightMode = true;\n      action.lightMode = () => {\n        // const modal = document.querySelector(\".modal\")\n        // const editButton = document.querySelector(\".edit-button\")\n        // const h1 = document.querySelector(\"h1\")\n        const h1Span = document.querySelector(\"h1 span\");\n        const main = document.querySelector(\"main\");\n        const header = document.querySelector(\".header\");\n        main.classList.add(\"bg-light\");\n        header.classList.add(\"bg-light\");\n        h1.classList.add(\"bg-light\");\n        h1Span.classList.add(\"hide\");\n        modal.classList.remove(\"hide\");\n        editButton.classList.add(\"hide\");\n      };\n    },\n    clearLightMode: (state, action) => {\n      state.lightMode = false;\n    }\n  }\n});\nexport const {\n  login,\n  logout,\n  setRememberMe,\n  clearRememberMe,\n  updateFirstName,\n  updateLastName,\n  setLightMode,\n  clearLightMode\n} = loginSlice.actions;\nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","loginSlice","name","initialState","isConnected","rememberMe","firstName","lastName","lightMode","reducers","login","state","logout","setRememberMe","clearRememberMe","updateFirstName","action","payload","updateLastName","setLightMode","h1Span","document","querySelector","main","header","classList","add","h1","modal","remove","editButton","clearLightMode","actions","reducer"],"sources":["/Users/ste/Documents/JOB/OPENCLASSROOMS/PROJET 13/argentbank/src/feature/loginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState: {\n    isConnected: false,\n    rememberMe: false,\n    firstName: \"\",\n    lastName: \"\",\n    lightMode: false,\n  },\n  reducers: {\n    login: (state) => {\n      state.isConnected = true\n    },\n    logout: (state) => {\n      state.isConnected = false\n    },\n    setRememberMe: (state) => {\n      state.rememberMe = true\n    },\n    clearRememberMe: (state) => {\n      state.rememberMe = false\n    },\n\n    updateFirstName: (state, action) => {\n      state.firstName = action.payload\n    },\n    updateLastName: (state, action) => {\n      state.lastName = action.payload\n    },\n    setLightMode: (state, action) => {\n      state.lightMode = true\n      action.lightMode = () => {\n        // const modal = document.querySelector(\".modal\")\n        // const editButton = document.querySelector(\".edit-button\")\n        // const h1 = document.querySelector(\"h1\")\n        const h1Span = document.querySelector(\"h1 span\")\n        const main = document.querySelector(\"main\")\n        const header = document.querySelector(\".header\")\n        main.classList.add(\"bg-light\")\n        header.classList.add(\"bg-light\")\n        h1.classList.add(\"bg-light\")\n        h1Span.classList.add(\"hide\")\n        modal.classList.remove(\"hide\")\n        editButton.classList.add(\"hide\")\n      }\n    },\n    clearLightMode: (state, action) => {\n      state.lightMode = false\n    },\n  },\n})\n\nexport const {\n  login,\n  logout,\n  setRememberMe,\n  clearRememberMe,\n  updateFirstName,\n  updateLastName,\n  setLightMode,\n  clearLightMode,\n} = loginSlice.actions\n\nexport default loginSlice.reducer\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,MAAMC,UAAU,GAAGD,WAAW,CAAC;EACpCE,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,WAAW,EAAE,KAAK;IAClBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE;EACb,CAAC;EACDC,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChBA,KAAK,CAACP,WAAW,GAAG,IAAI;IAC1B,CAAC;IACDQ,MAAM,EAAGD,KAAK,IAAK;MACjBA,KAAK,CAACP,WAAW,GAAG,KAAK;IAC3B,CAAC;IACDS,aAAa,EAAGF,KAAK,IAAK;MACxBA,KAAK,CAACN,UAAU,GAAG,IAAI;IACzB,CAAC;IACDS,eAAe,EAAGH,KAAK,IAAK;MAC1BA,KAAK,CAACN,UAAU,GAAG,KAAK;IAC1B,CAAC;IAEDU,eAAe,EAAE,CAACJ,KAAK,EAAEK,MAAM,KAAK;MAClCL,KAAK,CAACL,SAAS,GAAGU,MAAM,CAACC,OAAO;IAClC,CAAC;IACDC,cAAc,EAAE,CAACP,KAAK,EAAEK,MAAM,KAAK;MACjCL,KAAK,CAACJ,QAAQ,GAAGS,MAAM,CAACC,OAAO;IACjC,CAAC;IACDE,YAAY,EAAE,CAACR,KAAK,EAAEK,MAAM,KAAK;MAC/BL,KAAK,CAACH,SAAS,GAAG,IAAI;MACtBQ,MAAM,CAACR,SAAS,GAAG,MAAM;QACvB;QACA;QACA;QACA,MAAMY,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;QAChD,MAAMC,IAAI,GAAGF,QAAQ,CAACC,aAAa,CAAC,MAAM,CAAC;QAC3C,MAAME,MAAM,GAAGH,QAAQ,CAACC,aAAa,CAAC,SAAS,CAAC;QAChDC,IAAI,CAACE,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QAC9BF,MAAM,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QAChCC,EAAE,CAACF,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;QAC5BN,MAAM,CAACK,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;QAC5BE,KAAK,CAACH,SAAS,CAACI,MAAM,CAAC,MAAM,CAAC;QAC9BC,UAAU,CAACL,SAAS,CAACC,GAAG,CAAC,MAAM,CAAC;MAClC,CAAC;IACH,CAAC;IACDK,cAAc,EAAE,CAACpB,KAAK,EAAEK,MAAM,KAAK;MACjCL,KAAK,CAACH,SAAS,GAAG,KAAK;IACzB;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXE,KAAK;EACLE,MAAM;EACNC,aAAa;EACbC,eAAe;EACfC,eAAe;EACfG,cAAc;EACdC,YAAY;EACZY;AACF,CAAC,GAAG9B,UAAU,CAAC+B,OAAO;AAEtB,eAAe/B,UAAU,CAACgC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}